from datetime import datetime, timedelta


def calculate_sleep_cycles(bedtime):
    # Sleep cycle duration in minutes
    sleep_cycle = 90
    # Time taken to fall asleep (on average, 15 minutes)
    fall_asleep_time = 15

    # Convert bedtime to a datetime object
    bedtime = datetime.strptime(bedtime, "%I:%M %p")
    bedtime_with_fall_asleep = bedtime + timedelta(minutes=fall_asleep_time)

    # Generate wake-up times for 1 to 6 sleep cycles (6 cycles = 9 hours)
    wakeup_times = []
    for i in range(1, 7):
        wakeup_time = bedtime_with_fall_asleep + timedelta(minutes=sleep_cycle * i)
        wakeup_times.append(wakeup_time)

    return wakeup_times


# Input bedtime
bedtime = input("Enter your bedtime (example: 11:00 PM): ")

# Calculate and display the wake-up times
wakeup_times = calculate_sleep_cycles(bedtime)
print("\nOptimal wake-up times:")
for idx, time in enumerate(wakeup_times, start=1):
    print(f"Cycle {idx}: {time.strftime('%I:%M %p')} (after {90 * idx} minutes of sleep)")